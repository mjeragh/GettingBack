#usda 1.0
(
 defaultPrim = "simpleMaterial"
 upAxis = "Y"
 )

def Xform "simpleMaterial" (
                            assetInfo = {
                                asset identifier = @simpleMaterial.usd@
                                string name = "simpleMaterial"
                            }
                            kind = "component"
                            )
{
    def Scope "Geom"
    {
        def Mesh "cube"
        {
            float3[] extent = [(-0.5, -0.5, -0.5), (0.5, 0.5, 0.5)]
            int[] faceVertexCounts = [4, 4, 4, 4, 4, 4]
            int[] faceVertexIndices = [0, 1, 3, 2, 2, 3, 5, 4, 4, 5, 7, 6, 6, 7, 1, 0, 1, 7, 5, 3, 6, 0, 2, 4]
            rel material:binding = </simpleMaterial/Materials/cubeMaterial>
            normal3f[] normals = [(0, 0, 1), (0, 1, 0), (0, 0, -1), (0, -1, 0), (1, 0, 0), (-1, 0, 0)] (
                                                                                                        interpolation = "uniform"
                                                                                                        )
            point3f[] points = [(-0.5, -0.5, 0.5), (0.5, -0.5, 0.5), (-0.5, 0.5, 0.5), (0.5, 0.5, 0.5), (-0.5, 0.5, -0.5), (0.5, 0.5, -0.5), (-0.5, -0.5, -0.5), (0.5, -0.5, -0.5)]
            uniform token subdivisionScheme = "none"
        }
    }
    
    def "Materials"
    {
        def Material "cubeMaterial"
        {
            token outputs:surface.connect = </simpleMaterial/Materials/cubeMaterial/PBRShader.outputs:surface>
            
            def Shader "PBRShader"
            {
                uniform token info:id = "UsdPreviewSurface"
                color3f inputs:diffuseColor = (0.84, 0.65, 0.65)
                float inputs:metallic = 0.9
                float inputs:roughness = 0.2
                token outputs:surface
            }
        }
    }
}
